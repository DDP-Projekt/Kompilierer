Binde "Duden/Eingabe" ein.

Der Text __Eingabe_Puffer ist "".

Die Funktion Lies_Token_Gepuffert gibt einen Text zurück, macht:
	Wenn die Länge von __Eingabe_Puffer größer als 0 ist, dann:
		Der Text Rückgabe ist __Eingabe_Puffer.
		__Eingabe_Puffer ist "".
		Gib Rückgabe zurück.

	Wenn die Benutzereingabe nicht vorbei ist, gib die nächste Eingabe zurück.
	Gib "" zurück.
Und kann so benutzt werden:
	"der nächste Text" oder
	"den nächsten Text" oder
	"der naechste Text" oder
	"den naechsten Text"

Die Funktion Lies_Zahl_Gepuffert gibt eine Zahl zurück, macht:
	Gib den nächsten Text als Zahl zurück.
Und kann so benutzt werden:
	"die nächste Zahl" oder
	"die naechste Zahl"

Die Funktion Lies_Kommazahl_Gepuffert gibt eine Kommazahl zurück, macht:
	Gib den nächsten Text als Kommazahl zurück.
Und kann so benutzt werden:
	"die nächste Kommazahl" oder
	"die naechste Kommazahl"

Die Funktion Hat_Token gibt einen Boolean zurück, macht:
	Wenn die Länge von __Eingabe_Puffer größer als 0 ist, gib wahr zurück.
	Wenn die Benutzereingabe zu Ende gewesen ist, gib falsch zurück.
	Speichere den nächsten Text in __Eingabe_Puffer.
	Gib [wahr wenn] die Länge von __Eingabe_Puffer größer als 0 [ist] zurück.
Und kann so benutzt werden:
	"eine Eingabe vorhanden"

Die Funktion Hat_Zahl gibt einen Boolean zurück, macht:
	Gib eine Eingabe vorhanden und __Eingabe_Puffer eine Zahl [ist] zurück.
Und kann so benutzt werden:
	"die nächste Eingabe eine Zahl" oder
	"die naechste Eingabe eine Zahl"
