Die Funktion TrimAnfang mit den Parametern text und zeichen vom Typ Text Referenz und Buchstabe, gibt nichts zurück, macht:
	Die Zahl index ist 1.
	Solange (text an der Stelle index) gleich zeichen ist, mache:
		Erhöhe index um 1.
	Speichere text von index bis (die Länge von text) in text.
Und kann so benutzt werden:
	"Entferne alle <zeichen> vor <text>"

Die Funktion TrimAnfangWert mit den Parametern text und zeichen vom Typ Text und Buchstabe, gibt einen Text zurück, macht:
	Entferne alle zeichen vor text.
	Gib text zurück.
Und kann so benutzt werden:
	"<text> mit allen <zeichen> davor entfernt"

Die Funktion TrimEnde mit den Parametern text und zeichen vom Typ Text Referenz und Buchstabe, gibt nichts zurück, macht:
	Die Zahl index ist die Länge von text.
	Solange (text an der Stelle index) gleich zeichen ist, mache:
		Verringere index um 1.
	Speichere text von 1 bis index in text.
Und kann so benutzt werden:
	"Entferne alle <zeichen> nach <text>"

Die Funktion TrimEndeWert mit den Parametern text und zeichen vom Typ Text und Buchstabe, gibt einen Text zurück, macht:
	Entferne alle zeichen nach text.
	Gib text zurück.
Und kann so benutzt werden:
	"<text> mit allen <zeichen> danach entfernt"

Die Funktion Trim mit den Parametern text und zeichen vom Typ Text Referenz und Buchstabe, gibt nichts zurück, macht:
	Die Zahl startIndex ist 1.
	Die Zahl stopIndex ist die Länge von text.
	Solange (text an der Stelle startIndex) gleich zeichen ist, mache:
		Erhöhe startIndex um 1.
	Solange (text an der Stelle stopIndex) gleich zeichen ist, mache:
		Verringere stopIndex um 1.
	Speichere text von startIndex bis stopIndex in text.
Und kann so benutzt werden:
	"Entferne alle <zeichen> vor und nach <text>"

Die Funktion TrimWert mit den Parametern text und zeichen vom Typ Text und Buchstabe, gibt einen Text zurück, macht:
	Entferne alle zeichen vor und nach text.
	Gib text zurück.
Und kann so benutzt werden:
	"<text> mit allen <zeichen> davor und danach entfernt"

Die Funktion EnthältBuchstabe mit den Parametern text und zeichen vom Typ Text und Buchstabe, gibt einen Boolean zurück, macht:
	Für jeden Buchstaben b in text, mache:
		Wenn b gleich zeichen ist, dann:
			Gib wahr zurück.
	Gib falsch zurück.
Und kann so benutzt werden:
	"<text> <zeichen> enthält"

Die Funktion EnthältText mit den Parametern text und suchText vom Typ Text und Text, gibt einen Boolean zurück, macht:
	Die Zahl startIndex ist 0.
	Die Zahl endIndex ist die Länge von suchText.

	Solange endIndex kleiner als, oder die Länge von text ist, mache:
		Der Text subtext ist text von startIndex bis endIndex.

		Wenn subtext gleich suchText ist, dann:
			Gib wahr zurück.
		
		Speichere startIndex plus die Länge von suchText in endIndex.
		Erhöhe startIndex um 1.
	Gib falsch zurück.
Und kann so benutzt werden:
	"<text> <suchText> enthält"

Die Funktion BeginntMitBuchstabe mit den Parametern text und buchstabe vom Typ Text und Buchstabe, gibt einen Boolean zurück, macht:
	Gib (text an der Stelle 1) gleich buchstabe zurück.
Und kann so benutzt werden:
	"<text> mit <buchstabe> anfängt"

Die Funktion BeginntMitText mit den Parametern text und suchText vom Typ Text und Text, gibt einen Boolean zurück, macht:
	Gib (text von 1 bis die Länge von suchText) gleich suchText zurück.
Und kann so benutzt werden:
	"<text> mit <suchText> anfängt"

Die Funktion EndetMitBuchstabe mit den Parametern text und buchstabe vom Typ Text und Buchstabe, gibt einen Boolean zurück, macht:
	Gib (text an der Stelle die Länge von text) gleich buchstabe zurück.
Und kann so benutzt werden:
	"<text> mit <buchstabe> aufhört"

Die Funktion EndetMitText mit den Parametern text und suchText vom Typ Text und Text, gibt einen Boolean zurück, macht:
	Gib (text von die Länge von text minus die Länge von suchText plus 1 bis die Länge von text) gleich suchText zurück.
Und kann so benutzt werden:
	"<text> mit <suchText> aufhört"