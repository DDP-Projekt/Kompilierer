Binde "Duden/Laufzeit" ein.
Binde "Duden/TextBauer" ein.

[
	Gibt den FNV Hash für den Text t zurück.
]
Die öffentliche Funktion FNV_Hash mit dem Parameter t vom Typ Text Referenz, gibt eine Zahl zurück,
ist in "libddpstdlib.a" definiert
und kann so benutzt werden:
	"der Hash von <t>"

[
	Gibt den Hash für die Zahl z zurück.
]
Die öffentliche Funktion Zahl_Hash mit dem Parameter z vom Typ Zahl, gibt eine Zahl zurück, macht:
	Gib z zurück.
Und kann so benutzt werden:
	"der Hash von <z>"

[
	Gibt den Hash für die Kommazahl z zurück.
]
Die öffentliche Funktion Kommazahl_Hash mit dem Parameter z vom Typ Kommazahl, gibt eine Zahl zurück,
ist in "libddpstdlib.a" definiert
Und kann so benutzt werden:
	"der Hash von <z>"

[
	Gibt den Hash für den Buchstaben b zurück.
]
Die öffentliche Funktion Buchstaben_Hash mit dem Parameter b vom Typ Buchstabe, gibt eine Zahl zurück, macht:
	Gib b als Zahl zurück.
Und kann so benutzt werden:
	"der Hash von <b>"

[
	Gibt den Hash für den Buchstaben b zurück.
]
Die öffentliche Funktion Wahrheitswert_Hash mit dem Parameter w vom Typ Wahrheitswert, gibt eine Zahl zurück, macht:
	Gib w als Zahl zurück.
Und kann so benutzt werden:
	"der Hash von <w>"

[
	Representiert einen Eintrag in einer HashTabelle.
]
Wir nennen die generische öffentliche Kombination aus
	der Zahl art mit Standardwert 2, [ 0 == Leerer Wert, 1 == Grabstein, x == Wert]
	dem öffentlichen S Schlüssel,
	der öffentlichen W Wert,
einen Eintrag,
und erstellen sie so:
	"ein Eintrag für <Schlüssel> mit Wert <Wert>" oder
	"einem Eintrag für <Schlüssel> mit Wert <Wert>" oder
	"einen Eintrag für <Schlüssel> mit Wert <Wert>"

Die generische Funktion LeererEintrag mit den Parametern s und w vom Typ S und W, gibt einen S-W-Eintrag zurück, macht:
	Der S-W-Eintrag e ist der Standardwert von einem S-W-Eintrag.
	Speichere 0 in art von e.
	Gib e zurück.
Und kann so benutzt werden:
	"ein leerer Eintrag (<s>, <w>)" oder
	"einem leerer Eintrag (<s>, <w>)"

[ Gibt einen Grabstein zurück. ]
Die generische Funktion Grabstein mit den Parametern s und w vom Typ S und W, gibt einen S-W-Eintrag zurück, macht:
	Der S-W-Eintrag e ist der Standardwert von einem S-W-Eintrag.
	Speichere 1 in art von e.
	Gib e zurück.
Und kann so benutzt werden:
	"ein Grabstein (<s>, <w>)" oder
	"einen Grabstein (<s>, <w>)" oder
	"einem Grabstein (<s>, <w>)"

Die generische Funktion Ist_Leerer_Eintrag mit dem Parameter e vom Typ S-W-Eintrag Referenz, gibt einen Wahrheitswert zurück, macht:
	Gib wahr, wenn art von e gleich 0 ist, zurück.
Und kann so benutzt werden:
	"<e> ein leerer Eintrag ist"

Die generische Funktion Ist_Grabstein mit dem Parameter e vom Typ S-W-Eintrag Referenz, gibt einen Wahrheitswert zurück, macht:
	Gib wahr, wenn art von e gleich 1 ist, zurück.
Und kann so benutzt werden:
	"<e> ein Grabstein ist"

Die generische Funktion Ist_Leer_Oder_Grabstein mit dem Parameter e vom Typ S-W-Eintrag Referenz, gibt einen Wahrheitswert zurück, macht:
	Gib wahr, wenn art von e gleich 0 ist oder art von e gleich 1 ist, zurück.
Und kann so benutzt werden:
	"<e> <!nicht> leer oder ein Grabstein ist"

Wir nennen die generische öffentliche Kombination aus
	der S-W-Eintrag Liste einträge,
	der Zahl länge mit Standardwert 0,
eine HashTabelle.

Die generische Funktion Tabellen_Kapazität mit dem Parameter tabelle vom Typ S-W-HashTabelle Referenz, gibt eine Zahl zurück, macht:
	Gib die Länge von einträge von tabelle zurück.
Und kann so benutzt werden:
	"die Kapazität von <tabelle>",
	"der Kapazität von <tabelle>"

Die öffentliche generische Funktion Tabelle_Zu_Text mit dem Parameter tabelle vom Typ S-W-HashTabelle Referenz, gibt einen Text zurück, macht:
	Der TextBauer b ist ein neuer TextBauer.

	Für jede Zahl i von 1 bis die Länge von einträge von tabelle, mache:
		[
		Wenn (einträge von tabelle an der Stelle i) ein leerer Eintrag ist, dann: 
			Füge "leer, " an b an.
			Fahre mit der Schleife fort.
		Wenn (einträge von tabelle an der Stelle i) ein Grabstein ist, dann: 
			Füge "Grabstein, " an b an.
			Fahre mit der Schleife fort.
		]
		Wenn (einträge von tabelle an der Stelle i) leer oder ein Grabstein ist, dann: 
			Fahre mit der Schleife fort.

		Füge (Schlüssel von (einträge von tabelle an der Stelle i)) an b an.
	 	Füge ": " an b an.
		Der W w ist Wert von (einträge von tabelle an der Stelle i).
		Füge (w als Text) an b an.

		Wenn i ungleich die Länge von einträge von tabelle ist, füge ", " an b an.

	Gib b als Text zurück.
Und überlädt den "als" Operator.

Die generische Funktion Finde_Eintrag mit den Parametern tabelle und schlüssel vom Typ S-W-HashTabelle Referenz und S Referenz, gibt eine Zahl zurück, macht:
	Die Zahl index ist der Hash von schlüssel modulo der Kapazität von tabelle plus 1.
	Die Zahl grabstein_index ist -1.

	Solange wahr, mache:
		Wenn (einträge von tabelle an der Stelle index) ein leerer Eintrag ist, dann:
			Gib grabstein_index, falls grabstein_index ungleich -1 ist, ansonsten index zurück.
		Wenn aber (einträge von tabelle an der Stelle index) ein Grabstein ist und grabstein_index gleich -1 ist, dann:
			Speichere index in grabstein_index.
		Wenn aber Schlüssel von (einträge von tabelle an der Stelle index) gleich schlüssel ist, dann:
			Gib index zurück.
		
		Speichere (index plus 1) modulo die Kapazität von tabelle in index.
		Speichere index plus 1, falls index gleich 0 ist, ansonsten index in index.

	Gib index zurück.
Und kann so benutzt werden:
	"der Index für <schlüssel> in <tabelle>"

Die generische Funktion Kapazität_Anpassen mit den Parametern tabelle und neue_kapazität vom Typ S-W-HashTabelle Referenz und Zahl, gibt nichts zurück, macht:
	Die S-W-HashTabelle neue_tabelle ist der Standardwert von einer S-W-HashTabelle.
	:
		Der S-W-Eintrag leerer_eintrag ist ein leerer Eintrag ((der Standardwert von einem S), (der Standardwert von einem W)).
		Die S-W-Eintrag Liste neue_einträge ist neue_kapazität Mal leerer_eintrag.
		Speichere neue_einträge in einträge von neue_tabelle.

	Für jede Zahl i von 1 bis die Kapazität von tabelle, mache:
		Wenn (einträge von tabelle an der Stelle i) leer oder ein Grabstein ist, dann:
			Fahre mit der Schleife fort.

		Die Zahl eintrag_index ist der Index für (Schlüssel von (einträge von tabelle an der Stelle i)) in neue_tabelle.
		Speichere (einträge von tabelle an der Stelle i) in (einträge von neue_tabelle an der Stelle eintrag_index).
		Erhöhe länge von neue_tabelle um 1.

	Speichere neue_tabelle in tabelle.
Und kann so benutzt werden:
	"Passe die Kapazität von <tabelle> auf <neue_kapazität> an"

Die generische Funktion Ist_Neuer_Schlüssel_Index mit den Parametern index und tabelle vom Typ Zahl und S-W-HashTabelle Referenz, gibt einen Wahrheitswert zurück, macht:
	Gib wahr, wenn (einträge von tabelle an der Stelle index) ein leerer Eintrag ist, zurück.
Und kann so benutzt werden:
	"<index> für einen neuen Schlüssel in <tabelle> steht"

Die Kommazahl MAXIMALER_LADUNGS_FAKTOR ist 0,75.

Die öffentliche generische Funktion Tabellen_Wert_Setzen mit den Parametern tabelle, schlüssel und wert vom Typ S-W-HashTabelle Referenz, S und W, gibt einen Wahrheitswert zurück, macht:
	Wenn länge von tabelle plus 1 größer als die Kapazität von tabelle mal MAXIMALER_LADUNGS_FAKTOR ist oder die Kapazität von tabelle gleich 0 ist, dann:
		Die Zahl neue_kapazität ist (die Kapazität von tabelle mal 2), falls die Kapazität von tabelle groesser als 0 ist, ansonsten 16.
		Passe die Kapazität von tabelle auf neue_kapazität an.

	Die Zahl eintrag_index ist der Index für schlüssel in tabelle.
	Der Wahrheitswert ist_neuer_schlüssel ist wahr, wenn eintrag_index für einen neuen Schlüssel in tabelle steht.

	Wenn ist_neuer_schlüssel, dann: 
		Erhöhe länge von tabelle um 1.
	Speichere einen Eintrag für schlüssel mit Wert wert in einträge von tabelle an der Stelle eintrag_index.

	Gib ist_neuer_schlüssel zurück.
Und kann so benutzt werden:
	"Setze den Wert von <schlüssel> in <tabelle> auf <wert>" oder
	"setze den Wert von <schlüssel> in <tabelle> auf <wert>" oder
	"das Speichern von <schlüssel> mit Wert <wert> in <tabelle> einen neuen Schlüssel hinzugefügt hat"

Die öffentliche generische Funktion Tabellen_Wert_Lesen mit den Parametern tabelle und schlüssel vom Typ S-W-HashTabelle Referenz und S, gibt einen W zurück, macht:
	Wenn länge von tabelle plus 1 größer als die Kapazität von tabelle mal MAXIMALER_LADUNGS_FAKTOR ist oder die Kapazität von tabelle gleich 0 ist, dann:
		Die Zahl neue_kapazität ist (die Kapazität von tabelle mal 2), falls die Kapazität von tabelle groesser als 0 ist, ansonsten 16.
		Passe die Kapazität von tabelle auf neue_kapazität an.


	Die Zahl eintrag_index ist der Index für schlüssel in tabelle.
	Wenn (einträge von tabelle an der Stelle eintrag_index) leer oder ein Grabstein ist, dann:
		Gib den Standardwert von einem W zurück.
	Gib Wert von (einträge von tabelle an der Stelle eintrag_index) zurück.
Und überlädt den "an der Stelle" Operator.

Die öffentliche generische Funktion Tabelle_Hat_Schlüssel mit den Parametern tabelle und schlüssel vom Typ S-W-HashTabelle Referenz und S, gibt einen Wahrheitswert zurück, macht:
	Wenn länge von tabelle plus 1 größer als die Kapazität von tabelle mal MAXIMALER_LADUNGS_FAKTOR ist oder die Kapazität von tabelle gleich 0 ist, dann:
		Die Zahl neue_kapazität ist (die Kapazität von tabelle mal 2), falls die Kapazität von tabelle groesser als 0 ist, ansonsten 16.
		Passe die Kapazität von tabelle auf neue_kapazität an.

	Die Zahl eintrag_index ist der Index für schlüssel in tabelle.
	Gib falsch, wenn (einträge von tabelle an der Stelle eintrag_index) leer oder ein Grabstein ist, zurück.
Und kann so benutzt werden:
	"<schlüssel> <!nicht> in <tabelle> enthalten ist",
	"<tabelle> <schlüssel> <!nicht> enthält"

Die öffentliche generische Funktion Tabellen_Wert_Löschen mit den Parametern tabelle und schlüssel vom Typ S-W-HashTabelle Referenz und S, gibt einen W zurück, macht:
	Wenn länge von tabelle plus 1 größer als die Kapazität von tabelle mal MAXIMALER_LADUNGS_FAKTOR ist oder die Kapazität von tabelle gleich 0 ist, dann:
		Die Zahl neue_kapazität ist (die Kapazität von tabelle mal 2), falls die Kapazität von tabelle groesser als 0 ist, ansonsten 16.
		Passe die Kapazität von tabelle auf neue_kapazität an.


	Die Zahl eintrag_index ist der Index für schlüssel in tabelle.

	Wenn (einträge von tabelle an der Stelle eintrag_index) leer oder ein Grabstein ist, dann:
		Gib der Standardwert von einem W zurück.

	Der W wert ist Wert von (einträge von tabelle an der Stelle eintrag_index).
	Speichere einen Grabstein ((der Standardwert von einem S), (der Standardwert von einem W)) in (einträge von tabelle an der Stelle eintrag_index).
	Gib wert zurück.
Und kann so benutzt werden:
	"Lösche den Wert für <schlüssel> aus <tabelle>" oder
	"der gelöschte Wert für <schlüssel> in <tabelle>" oder
	"den gelöschten Wert für <schlüssel> in <tabelle>"

Die öffentliche generische Funktion Tabellen_Einträge mit dem Parameter tabelle vom Typ S-W-HashTabelle Referenz, gibt eine S-W-Eintrag Liste zurück, macht:
	Wenn länge von tabelle gleich 0 ist, gib eine leere S-W-Eintrag Liste zurück.

	Die S-W-Eintrag Liste einträge ist die Kapazität von tabelle Mal ein leerer Eintrag ((der Standardwert von einem S), (der Standardwert von einem W)).
	Die Zahl j ist 1.
	Für jede Zahl i von 1 bis die Länge von einträge von tabelle, mache:
		Wenn (einträge von tabelle an der Stelle i) nicht leer oder ein Grabstein ist, dann:
			Speichere (einträge von tabelle an der Stelle i) in (einträge an der Stelle j).
			Erhöhe j um 1.
	Gib einträge bis zum (j minus 1). Element zurück.
Und kann so benutzt werden:
	"die Einträge von <tabelle>",
	"alle Einträge von <tabelle>"
