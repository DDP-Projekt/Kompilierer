Binde "Duden/Fehlerbehandlung" ein.

[
	Gibt -9223372036854775807 zurück.
]
Die öffentliche Funktion MinZahl gibt eine Zahl zurück, macht:
	Gib 1 um 63 Bit nach Links verschoben zurück.
Und kann so benutzt werden:
	"der minimale Wert einer Zahl"

[
	Gibt 9223372036854775807 zurück.
]
Die öffentliche Funktion MaxZahl gibt eine Zahl zurück, macht:
	Gib 9223372036854775807 zurück.
Und kann so benutzt werden:
	"der maximale Wert einer Zahl"

[
	Gibt -(2−2^−31) · 2^1023 zurück.
]
Die öffentliche Funktion MinKommazahl gibt eine Kommazahl zurück, macht:
	Gib -(2 minus 2 hoch -31) mal 2 hoch 1023 zurück.
Und kann so benutzt werden:
	"der minimale Wert einer Kommazahl"

[
	Gibt (2−2^−31) · 2^1023 zurück.
]
Die öffentliche Funktion MaxKommazahl gibt eine Kommazahl zurück, macht:
	Gib (2 minus 2 hoch -31) mal 2 hoch 1023 zurück.
Und kann so benutzt werden:
	"der maximale Wert einer Kommazahl"

[
	Gibt 2^-1022 zurück.
	Der Wert der am nächsten zu +0 ist.
]
Die öffentliche Funktion EpsilonPos gibt eine Kommazahl zurück, macht:
	Gib 2 hoch -1022 zurück.
Und kann so benutzt werden:
	"der kleinste positive Wert einer Kommazahl"

[
	Gibt -2^-1022 zurück.
	Der Wert der am nächsten zu -0 ist.
]
Die öffentliche Funktion EpsilonNeg gibt eine Kommazahl zurück, macht:
	Gib -2 hoch -1022 zurück.
Und kann so benutzt werden:
	"der kleinste negative Wert einer Kommazahl"

[
	Gibt Unendlich (1,0 durch 0,0) zurück.
]
Die öffentliche Funktion Unendlich gibt eine Kommazahl zurück, macht:
	Gib 1,0 durch 0,0 zurück.
Und kann so benutzt werden:
	"Unendlich"

[
	Gibt Unendlich (-1,0 durch 0,0) zurück.
]
Die öffentliche Funktion Minus_Unendlich gibt eine Kommazahl zurück, macht:
	Gib -1,0 durch 0,0 zurück.
Und kann so benutzt werden:
	"Minus-Unendlich"

[
	Gibt NaN (0,0 durch 0,0) zurück.
]
Die öffentliche Funktion KeineZahl gibt eine Kommazahl zurück, macht:
	Gib 0,0 durch 0,0 zurück.
Und kann so benutzt werden:
	"keine Zahl"

Die öffentliche Konstante Null ist 0.
Die öffentliche Konstante null ist 0.

Die öffentliche Funktion Zahl_Eins gibt eine Zahl zurück, macht:
	[ Funktion, weil "ein" ein reservierter Token ist ]
	Gib 1 zurück.
Und kann so benutzt werden:
	"ein", "Eins", "eins", "erste", "ersten"

Die öffentliche Konstante Zwei ist 2.
Die öffentliche Konstante zwei ist 2.
Die öffentliche Konstante zweite ist 2.
Die öffentliche Konstante zweiten ist 2.

Die öffentliche Konstante Drei ist 3.
Die öffentliche Konstante drei ist 3.
Die öffentliche Konstante dritte ist 3.
Die öffentliche Konstante dritten ist 3.

Die öffentliche Konstante Vier ist 4.
Die öffentliche Konstante vier ist 4.
Die öffentliche Konstante vierte ist 4.
Die öffentliche Konstante vierten ist 4.

Die öffentliche Konstante Fünf ist 5.
Die öffentliche Konstante fünf ist 5.
Die öffentliche Konstante fünfte ist 5.
Die öffentliche Konstante fünften ist 5.

Die öffentliche Konstante Sechs ist 6.
Die öffentliche Konstante sechs ist 6.
Die öffentliche Konstante sechste ist 6.
Die öffentliche Konstante sechsten ist 6.

Die öffentliche Konstante Sieben ist 7.
Die öffentliche Konstante sieben ist 7.
Die öffentliche Konstante siebte ist 7.
Die öffentliche Konstante siebten ist 7.

Die öffentliche Konstante Acht ist 8.
Die öffentliche Konstante acht ist 8.
Die öffentliche Konstante achte ist 8.
Die öffentliche Konstante achten ist 8.

Die öffentliche Konstante Neun ist 9.
Die öffentliche Konstante neun ist 9.
Die öffentliche Konstante neunte ist 9.
Die öffentliche Konstante neunten ist 9.

Die öffentliche Konstante Zehn ist 10.
Die öffentliche Konstante zehn ist 10.
Die öffentliche Konstante zehnte ist 10.
Die öffentliche Konstante zehnten ist 10.

Die öffentliche Konstante Elf ist 11.
Die öffentliche Konstante elf ist 11.
Die öffentliche Konstante elfte ist 11.
Die öffentliche Konstante elften ist 11.

Die öffentliche Konstante Zwölf ist 12.
Die öffentliche Konstante zwölf ist 12.
Die öffentliche Konstante zwölfte ist 12.
Die öffentliche Konstante zwölften ist 12.

Die öffentliche Konstante Einhundert ist 100.
Die öffentliche Konstante Hundert ist 100.
Die öffentliche Konstante hundert ist 100.
Die öffentliche Konstante hunderte ist 100.
Die öffentliche Konstante hunderten ist 100.

Die öffentliche Konstante Eintausend ist 1000.
Die öffentliche Konstante Tausend ist 1000.
Die öffentliche Konstante tausend ist 1000.
Die öffentliche Konstante tausenste ist 1000.
Die öffentliche Konstante tausensten ist 1000.

Die öffentliche Konstante Zehntausend ist 10000.
Die öffentliche Konstante zehntausend ist 10000.

Die öffentliche Konstante Einhunderttausend ist 100000.
Die öffentliche Konstante einhunderttausend ist 100000.

Die öffentliche Konstante Million ist 1000000.
[
	Gibt 1000000 zurück.
]
Die öffentliche Funktion Zahl_Million mit dem Parameter n vom Typ Zahl, gibt eine Zahl zurück, macht:
	Gib n mal 1000000 zurück.
Und kann so benutzt werden:
	"<n> Million"

[
	Gibt 0,5 zurück.
]
Die öffentliche Konstante einhalb ist 0,5.
Die öffentliche Konstante halb ist 0,5.

[
	Gibt 1,5 zurück.
]
Die öffentliche Konstante anderthalb ist 1,5.
Die öffentliche Konstante eineinhalb ist 1,5.

[
	Gibt <n> durch 2 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Halbe mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 2 zurück.
Und kann so benutzt werden:
	"<n> Halbe"

[
	Gibt <n> durch 3 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Drittel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 3 zurück.
Und kann so benutzt werden:
	"<n> Drittel"

[
	Gibt <n> durch 4 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Viertel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 4 zurück.
Und kann so benutzt werden:
	"<n> Viertel"

[
	Gibt <n> durch 5 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Fünftel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 5 zurück.
Und kann so benutzt werden:
	"<n> Fünftel"

[
	Gibt <n> durch 6 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Sechstel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 6 zurück.
Und kann so benutzt werden:
	"<n> Sechstel"

[
	Gibt <n> durch 7 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Siebtel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 7 zurück.
Und kann so benutzt werden:
	"<n> Siebtel"

[
	Gibt <n> durch 8 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Achtel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 8 zurück.
Und kann so benutzt werden:
	"<n> Achtel"

[
	Gibt <n> durch 9 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Neuntel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 9 zurück.
Und kann so benutzt werden:
	"<n> Neuntel"

[
	Gibt <n> durch 10 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Zehntel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 10 zurück.
Und kann so benutzt werden:
	"<n> Zehntel"

[
	Gibt <n> durch 11 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Elftel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 11 zurück.
Und kann so benutzt werden:
	"<n> Elftel"

[
	Gibt <n> durch 12 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Zwölftel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 12 zurück.
Und kann so benutzt werden:
	"<n> Zwölftel"

[
	Gibt <z> mal 12 zurück.
]
Die öffentliche Funktion Zahl_Duzent mit dem Parameter z vom Typ Zahl, gibt eine Zahl zurück, macht:
	Gib z mal 12 zurück.
Und kann so benutzt werden:
	"<z> Dutzend"

Die öffentliche Funktion Hex_Zu_Zahl mit dem Parameter hex vom Typ Text, gibt eine Zahl zurück, macht:
	Die Zahl l ist die Länge von hex.
	Die Zahl ergebnis ist 0.
	Für jede Zahl i von die Länge von hex bis 1 mit Schrittgröße -1, mache:
		Die Zahl bz ist (hex an der Stelle i) als Zahl.
		Wenn bz zwischen 96 und 103 ist, verringere bz um 87.
		Wenn aber bz zwischen 47 und 58 ist, verringere bz um 48.
		Wenn aber bz zwischen 64 und 71 ist, verringere bz um 55.
		Sonst:
			Melde den Fehler "Ungültige Hexadezimalzahl".
			Gib 0 zurück.

		Erhöhe ergebnis um (bz mal 16 hoch (l minus i)) als Zahl.

	Gib ergebnis zurück.
Und kann so benutzt werden:
	"die Hexadezimalzahl <hex>"

Die Buchstaben Liste hexZiffern ist eine Liste, die aus
	'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'
besteht.

Die öffentliche Funktion Zahl_Zu_Hex mit dem Parameter zahl vom Typ Zahl, gibt einen Text zurück, macht:
	Wenn zahl gleich 0 ist, dann:
		Gib "0" zurück.

	Wenn zahl kleiner als 0 ist, dann:
		Gib '-' verkettet mit (-zahl in Hexadezimal) zurück.

	Der Text ergebnis ist "".
	Solange zahl ungleich 0 ist, mache:
		Speichere hexZiffern an der Stelle (zahl modulo 16 plus 1) verkettet mit ergebnis in ergebnis.
		Speichere (zahl durch 16) als Zahl in zahl.

	Gib ergebnis zurück.
Und kann so benutzt werden:
	"<zahl> in Hexadezimal"