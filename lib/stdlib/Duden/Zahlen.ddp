[
	Gibt -9223372036854775807 zurück.
]
Die öffentliche Funktion MinZahl gibt eine Zahl zurück, macht:
	Gib -9223372036854775807 zurück.
Und kann so benutzt werden:
	"der minimale Wert einer Zahl"

[
	Gibt 9223372036854775807 zurück.
]
Die öffentliche Funktion MaxZahl gibt eine Zahl zurück, macht:
	Gib 9223372036854775807 zurück.
Und kann so benutzt werden:
	"der maximale Wert einer Zahl"

[
	Gibt -(2−2^−31) · 2^1023 zurück.
]
Die öffentliche Funktion MinKommazahl gibt eine Kommazahl zurück, macht:
	Gib -(2 minus 2 hoch -31) mal 2 hoch 1023 zurück.
Und kann so benutzt werden:
	"der minimale Wert einer Kommazahl"

[
	Gibt (2−2^−31) · 2^1023 zurück.
]
Die öffentliche Funktion MaxKommazahl gibt eine Kommazahl zurück, macht:
	Gib (2 minus 2 hoch -31) mal 2 hoch 1023 zurück.
Und kann so benutzt werden:
	"der maximale Wert einer Kommazahl"

[
	Gibt 2^-1022 zurück.
	Der Wert der am nächsten zu +0 ist.
]
Die öffentliche Funktion EpsilonPos gibt eine Kommazahl zurück, macht:
	Gib 2 hoch -1022 zurück.
Und kann so benutzt werden:
	"der kleinste positive Wert einer Kommazahl"

[
	Gibt -2^-1022 zurück.
	Der Wert der am nächsten zu -0 ist.
]
Die öffentliche Funktion EpsilonNeg gibt eine Kommazahl zurück, macht:
	Gib -2 hoch -1022 zurück.
Und kann so benutzt werden:
	"der kleinste negative Wert einer Kommazahl"

[
	Gibt Unendlich (1,0 durch 0,0) zurück.
]
Die öffentliche Funktion Unendlich gibt eine Kommazahl zurück, macht:
	Gib 1,0 durch 0,0 zurück.
Und kann so benutzt werden:
	"Unendlich"

[
	Gibt Unendlich (-1,0 durch 0,0) zurück.
]
Die öffentliche Funktion Minus_Unendlich gibt eine Kommazahl zurück, macht:
	Gib -1,0 durch 0,0 zurück.
Und kann so benutzt werden:
	"Minus-Unendlich"

[
	Gibt NaN (0,0 durch 0,0) zurück.
]
Die öffentliche Funktion KeineZahl gibt eine Kommazahl zurück, macht:
	Gib 0,0 durch 0,0 zurück.
Und kann so benutzt werden:
	"keine Zahl"

[
	Gibt 0 zurück.
]
Die öffentliche Funktion Zahl_Null gibt eine Zahl zurück, macht:
	Gib 0 zurück.
Und kann so benutzt werden:
	"Null" oder "null"

[
	Gibt 1 zurück.
]
Die öffentliche Funktion Zahl_Eins gibt eine Zahl zurück, macht:
	Gib 1 zurück.
Und kann so benutzt werden:
	"Eins", "eins", "ein", "erste", "ersten"

[
	Gibt 2 zurück.
]
Die öffentliche Funktion Zahl_Zwei gibt eine Zahl zurück, macht:
	Gib 2 zurück.
Und kann so benutzt werden:
	"Zwei", "zwei", "zweite", "zweiten"

[
	Gibt 3 zurück.
]
Die öffentliche Funktion Zahl_Drei gibt eine Zahl zurück, macht:
	Gib 3 zurück.
Und kann so benutzt werden:
	"Drei", "drei", "dritte", "dritten"

[
	Gibt 4 zurück.
]
Die öffentliche Funktion Zahl_Vier gibt eine Zahl zurück, macht:
	Gib 4 zurück.
Und kann so benutzt werden:
	"Vier", "vier", "vierte", "vierten"

[
	Gibt 5 zurück.
]
Die öffentliche Funktion Zahl_Fünf gibt eine Zahl zurück, macht:
	Gib 5 zurück.
Und kann so benutzt werden:
	"Fünf", "fünf", "fünfte", "fünften"

[
	Gibt 6 zurück.
]
Die öffentliche Funktion Zahl_Sechs gibt eine Zahl zurück, macht:
	Gib 6 zurück.
Und kann so benutzt werden:
	"Sechs", "sechs", "sechste", "sechsten"

[
	Gibt 7 zurück.
]
Die öffentliche Funktion Zahl_Sieben gibt eine Zahl zurück, macht:
	Gib 7 zurück.
Und kann so benutzt werden:
	"Sieben", "sieben", "siebte", "siebten"

[
	Gibt 8 zurück.
]
Die öffentliche Funktion Zahl_Acht gibt eine Zahl zurück, macht:
	Gib 8 zurück.
Und kann so benutzt werden:
	"Acht", "acht", "achte", "achten"

[
	Gibt 9 zurück.
]
Die öffentliche Funktion Zahl_Neun gibt eine Zahl zurück, macht:
	Gib 9 zurück.
Und kann so benutzt werden:
	"Neun", "neun", "neunte", "neunten"

[
	Gibt 10 zurück.
]
Die öffentliche Funktion Zahl_Zehn gibt eine Zahl zurück, macht:
	Gib 10 zurück.
Und kann so benutzt werden:
	"Zehn", "zehn", "zehnte", "zehnten"

[
	Gibt 11 zurück.
]
Die öffentliche Funktion Zahl_Elf gibt eine Zahl zurück, macht:
	Gib 11 zurück.
Und kann so benutzt werden:
	"Elf", "elf", "elfte", "elften"

[
	Gibt 12 zurück.
]
Die öffentliche Funktion Zahl_Zwölf gibt eine Zahl zurück, macht:
	Gib 12 zurück.
Und kann so benutzt werden:
	"Zwölf", "zwölf", "zwölfte", "zwölften"

[
	Gibt 100 zurück.
]
Die öffentliche Funktion Zahl_Hundert gibt eine Zahl zurück, macht:
	Gib 100 zurück.
Und kann so benutzt werden:
	"Einhundert", "Hundert", "hundert", "hunderte", "hunderten"

[
	Gibt 1000 zurück.
]
Die öffentliche Funktion Zahl_Tausend gibt eine Zahl zurück, macht:
	Gib 1000 zurück.
Und kann so benutzt werden:
	"Eintausend", "Tausend", "tausend", "tausenste", "tausensten"

[
	Gibt 10000 zurück.
]
Die öffentliche Funktion Zahl_Zehntausend gibt eine Zahl zurück, macht:
	Gib 10000 zurück.
Und kann so benutzt werden:
	"Zehntausend" oder "zehntausend"

[
	Gibt 100000 zurück.
]
Die öffentliche Funktion Zahl_Hunderttausend gibt eine Zahl zurück, macht:
	Gib 100000 zurück.
Und kann so benutzt werden:
	"Einhunderttausend" oder "einhunderttausend"

[
	Gibt 1000000 zurück.
]
Die öffentliche Funktion Zahl_Million gibt eine Zahl zurück, macht:
	Gib 1000000 zurück.
Und kann so benutzt werden:
	"eine Million" oder "Million"

[
	Gibt 0,5 zurück.
]
Die öffentliche Funktion Zahl_Halb gibt eine Kommazahl zurück, macht:
	Gib 0,5 zurück.
Und kann so benutzt werden:
	"einhalb" oder "halb"

[
	Gibt 1,5 zurück.
]
Die öffentliche Funktion Zahl_Anderthalb gibt eine Kommazahl zurück, macht:
	Gib 1,5 zurück.
Und kann so benutzt werden:
	"anderthalb" oder "eineinhalb"

[
	Gibt <n> durch 2 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Halbe mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 2 zurück.
Und kann so benutzt werden:
	"<n> Halbe"

[
	Gibt <n> durch 3 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Drittel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 3 zurück.
Und kann so benutzt werden:
	"<n> Drittel"

[
	Gibt <n> durch 4 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Viertel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 4 zurück.
Und kann so benutzt werden:
	"<n> Viertel"

[
	Gibt <n> durch 5 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Fünftel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 5 zurück.
Und kann so benutzt werden:
	"<n> Fünftel"

[
	Gibt <n> durch 6 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Sechstel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 6 zurück.
Und kann so benutzt werden:
	"<n> Sechstel"

[
	Gibt <n> durch 7 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Siebtel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 7 zurück.
Und kann so benutzt werden:
	"<n> Siebtel"

[
	Gibt <n> durch 8 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Achtel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 8 zurück.
Und kann so benutzt werden:
	"<n> Achtel"

[
	Gibt <n> durch 9 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Neuntel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 9 zurück.
Und kann so benutzt werden:
	"<n> Neuntel"

[
	Gibt <n> durch 10 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Zehntel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 10 zurück.
Und kann so benutzt werden:
	"<n> Zehntel"

[
	Gibt <n> durch 11 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Elftel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 11 zurück.
Und kann so benutzt werden:
	"<n> Elftel"

[
	Gibt <n> durch 12 zurück.
]
Die öffentliche Funktion Zahl_Bruch_Zwölftel mit dem Parameter n vom Typ Zahl, gibt eine Kommazahl zurück, macht:
	Gib n durch 12 zurück.
Und kann so benutzt werden:
	"<n> Zwölftel"

[
	Gibt <z> mal 12 zurück.
]
Die öffentliche Funktion Zahl_Duzent mit dem Parameter z vom Typ Zahl, gibt eine Zahl zurück, macht:
	Gib z mal 12 zurück.
Und kann so benutzt werden:
	"<z> Dutzend"